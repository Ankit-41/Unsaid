import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';
import { saveFileLocally } from './utils/fileUpload.js';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

async function testFileUpload() {
  try {
    console.log('Starting file upload test...');
    
    // Create a test image file if it doesn't exist
    const testImagePath = path.join(__dirname, 'test-image.jpg');
    if (!fs.existsSync(testImagePath)) {
      console.log('Creating test image...');
      // Create a very basic image (1x1 pixel JPEG)
      const basicJpegHeader = Buffer.from([
        0xFF, 0xD8, 0xFF, 0xE0, 0x00, 0x10, 0x4A, 0x46, 0x49, 0x46, 0x00, 0x01,
        0x01, 0x01, 0x00, 0x48, 0x00, 0x48, 0x00, 0x00, 0xFF, 0xDB, 0x00, 0x43,
        0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x00, 0x0B, 0x08, 0x00, 0x01, 0x00,
        0x01, 0x01, 0x01, 0x11, 0x00, 0xFF, 0xC4, 0x00, 0x14, 0x00, 0x01, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0xFF, 0xC4, 0x00, 0x14, 0x10, 0x01, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0xFF, 0xDA, 0x00, 0x08, 0x01, 0x01, 0x00, 0x00, 0x3F, 0x00, 0x00,
        0x00, 0x00, 0xFF, 0xD9
      ]);
      fs.writeFileSync(testImagePath, basicJpegHeader);
    }
    
    // Read the test image
    const imageData = fs.readFileSync(testImagePath);
    console.log('Test image size:', imageData.length, 'bytes');
    
    // Create a mock file object similar to what express-fileupload provides
    const mockFile = {
      name: 'test-image.jpg',
      data: imageData,
      size: imageData.length,
      mimetype: 'image/jpeg'
    };
    
    // Test the local file storage
    console.log('Testing local file storage...');
    const imageUrl = await saveFileLocally(mockFile);
    
    console.log('Image uploaded successfully!');
    console.log('Image URL:', imageUrl);
    console.log(`You can test this URL by opening it in your browser: ${imageUrl}`);
    
    // Check if the public/uploads directory exists and list its contents
    const uploadsDir = path.join(__dirname, 'public', 'uploads');
    if (fs.existsSync(uploadsDir)) {
      console.log('Contents of uploads directory:');
      const files = fs.readdirSync(uploadsDir);
      files.forEach(file => console.log(' - ' + file));
    } else {
      console.error('uploads directory does not exist');
    }
    
    console.log('Test completed successfully!');
  } catch (error) {
    console.error('Test failed:', error);
  }
}

// Run the test
testFileUpload(); 